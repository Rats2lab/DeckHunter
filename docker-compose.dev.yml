version: '3.8'

networks:
  development:
    driver: bridge

services:
  database:
    image: postgres:15-alpine
    container_name: deck-hunter-db
    hostname: deck-hunter-db
    ports:
      - 5432:${DB_PORT}
    volumes:
      - .pgdata:/var/lib/postgresql/data
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: Europe/Madrid
      PGTZ: Europe/Madrid
    restart: unless-stopped
    networks:
      - ${NODE_ENV}
    tty: true

  backend:
    container_name: deck-hunter-be
    hostname: deck-hunter-be
    build:
      context: .
      target: ${NODE_ENV}
    ports:
      - ${APP_PORT:-3000}:3000
    volumes:
      - ./src:/usr/src/app/src
      - ./test:/usr/src/app/test
      - ./node_modules:/usr/src/app/node_modules
      - ./package.json:/usr/src/app/package.json
      - ./yarn.lock:/usr/src/app/yarn.lock
      - ./nest-cli.json:/usr/src/app/nest-cli.json:ro
      - ./tsconfig.build.json:/usr/src/app/tsconfig.build.json:ro
      - ./tsconfig.json:/usr/src/app/tsconfig.json:ro
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_PORT: ${APP_PORT}
      MIKRO_ORM_CLI: ${MIKRO_ORM_CLI}
      MIKRO_ORM_CLI_USE_TS_NODE: ${MIKRO_ORM_CLI_USE_TS_NODE}
    restart: unless-stopped
    networks:
      - ${NODE_ENV}
    tty: true
